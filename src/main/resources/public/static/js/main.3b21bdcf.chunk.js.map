{"version":3,"sources":["Components/properties.js","Components/Products/ProductGrid.jsx","Components/Products/ProductForm.jsx","Components/Products/ProductScreen.jsx","Components/Categories/CategoryGrid.jsx","Components/Categories/CategoryForm.jsx","Components/Categories/CategoryScreen.jsx","Components/InventoryMainMenu.jsx","serviceWorker.js","index.js","logo.svg"],"names":["properties","rootUrl","rootUrl2","ProductGrid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadGridData","setState","errorMessage","loading","fetch","state","then","response","json","data","products","infoMessage","loadMessage","catch","error","message","console","log","date","Date","hours","getHours","minutes","getDay","getMinutes","seconds","getSeconds","ampm","handleEdit","id","setTabKey","setProductId","setAction","handleDelete","product","showDeleteModal","productToDelete","deleteProduct","_this2","react_default","a","createElement","ButtonToolbar","className","aria-label","Spinner","animation","hidden","style","color","Button","size","variant","onClick","Table","striped","bordered","hover","responsive","map","i","key","productName","partNumber","productLabel","minimumRequired","startingInventory","inventoryReceived","inventorySold","inventoryOnHand","Modal","show","onHide","handleClose","Header","closeButton","Title","Body","Footer","Component","ProductForm","getProductRecord","axios","get","res","proId","proPartNo","proName","proDesc","productDesc","categoryId","beginning","alert","handleChange","event","successMessage","defineProperty","target","name","value","includes","test","addItemErrArr","title","parseInt","trim","length","removeItemErrArr","formErr","some","item","concat","toConsumableArray","errList","errListindex","indexOf","splice","window","confirm","preventDefault","componentDidMount","resetForm","action","addProduct","url","method","editProduct","populateCategoryListBox","proLblList","prevProps","productId","undefined","Container","Row","Col","xs","Form","Group","controlId","Label","Control","type","onChange","required","as","defaultValue","proLabel","categoryName","ButtonGroup","Alert","errField","ProductScreen","prodId","keyForTab","tabKey","updateAction","fluid","Tabs","activeKey","onSelect","Tab","eventKey","onEnter","Products_ProductGrid","Products_ProductForm","CategoryGrid","categories","setCategoryId","category","categoryToDelete","deleteCategory","CategoryForm","getCategoryRecord","addCategory","editCategory","CategoryScreen","catId","Categories_CategoryGrid","Categories_CategoryForm","InventoryMainMenu","toggleForms","formName","hideProducts","hidePurchases","hideSales","hideCategories","hideSuppliers","hideReports","Navbar","bg","expand","Brand","href","alt","src","logo","width","height","Toggle","aria-controls","Collapse","Nav","Link","Products_ProductScreen","Categories_CategoryScreen","Boolean","location","hostname","match","ReactDOM","render","Components_InventoryMainMenu","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3b21bdcf.chunk.js","sourcesContent":["export const properties = {\r\n    rootUrl: \"http://localhost:5000\",\r\n    rootUrl2: \"http://ec2-3-92-143-179.compute-1.amazonaws.com:5000\",\r\n    \r\n};","import React, { Component } from 'react';\r\nimport { Spinner, Modal, Container, Row, Col, Table, Form, ButtonGroup, Button, Tabs, Tab, Alert, ButtonToolbar, InputGroup } from 'react-bootstrap';\r\nimport { properties } from './../properties';\r\n\r\n\r\nclass ProductGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            errorMessage: \"\",\r\n            infoMessage: \"\",\r\n            loading: true,            \r\n            showDeleteModal: false,\r\n            productToDelete: \"\",\r\n            rootUrl: properties.rootUrl\r\n        };\r\n        this.loadGridData();  \r\n    }\r\n\r\n    loadGridData = () => {\r\n\r\n        this.setState({errorMessage: \"\", loading: true});\r\n\r\n        fetch(this.state.rootUrl + '/product/all/')        \r\n        .then(response => response.json())\r\n        .then(data => this.setState({products: data,errorMessage: \"\", loading: false, infoMessage: this.loadMessage()}))\r\n        .catch(error => this.setState({errorMessage : error.message, loading: false, infoMessage: \"\"}))\r\n        \r\n        console.log(\"grid loaded.\")        \r\n        console.log(this.state.loading);\r\n\r\n    }\r\n\r\n    loadMessage= () => {\r\n        var date = new Date();\r\n        var hours = date.getHours();\r\n        var days = date.getDay(); \r\n        var minutes = date.getMinutes();\r\n        var seconds = date.getSeconds();\r\n        var ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0'+minutes : minutes;\r\n        seconds = seconds < 10 ? '0'+seconds : seconds;\r\n\r\n        return  'Successfully refreshed data at ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;        \r\n    }\r\n\r\n\r\n    handleEdit = (id) => {\r\n        this.props.setTabKey(\"proEntry\");\r\n        this.props.setProductId(id);\r\n        this.props.setAction(\"edit\");\r\n    }\r\n\r\n    handleDelete = (product) => {\r\n        this.setState({showDeleteModal: true})\r\n        this.setState({productToDelete: product})\r\n    }\r\n\r\n    deleteProduct = (product) => {\r\n\r\n        fetch(this.state.rootUrl + '/product/delete/'+ product.id) \r\n       .catch(error => this.setState({errorMessage : error.message}))\r\n       \r\n       this.loadGridData();\r\n       this.setState({showDeleteModal: false})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>                \r\n                <ButtonToolbar className=\"justify-content-between\" aria-label=\"Toolbar with Button groups\">                    \r\n                    <Spinner animation=\"border\" hidden={!this.state.loading} />\r\n                    <h7 style={{color:\"red\"}} hidden={!this.state.errorMessage}>{this.state.errorMessage}</h7>                    \r\n                    <h7 style={{color:\"green\"}}>{this.state.infoMessage}</h7>                    \r\n                    <Button size=\"sm\" variant=\"success\"  onClick={() => this.loadGridData()} >Refresh</Button>       \r\n                </ButtonToolbar>\r\n                <br/>\r\n                <Table striped bordered hover responsive size=\"sm\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n                            <th>Name</th>\r\n                            <th>Part #</th>\r\n                            <th>Category</th>\r\n                            <th>Min Required</th>\r\n                            <th>Starting</th>\r\n                            <th>Purchased</th>\r\n                            <th>Sold</th>\r\n                            <th>OnHand</th>                        \r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { \r\n                            this.state.products.map( (product, i) =>\r\n                                <tr key={i}>\r\n                                    <td>{product.id}</td>\r\n                                    <td>{product.productName}</td>\r\n                                    <td>{product.partNumber}</td>\r\n                                    <td>{product.productLabel}</td>\r\n                                    <td>{product.minimumRequired}</td>\r\n                                    <td>{product.startingInventory}</td>\r\n                                    <td>{product.inventoryReceived}</td>\r\n                                    <td>{product.inventorySold}</td>\r\n                                    <td>{product.inventoryOnHand}</td>                                \r\n                                    <td>\r\n                                        <Button variant=\"primary\" size=\"sm\" onClick={() => this.handleEdit(product.id)} ><i id={product.id} className=\"fas fa-pen\"></i></Button> \r\n                                        <Button variant=\"danger\" size=\"sm\" onClick={() => this.handleDelete(product)} ><i id={product.id} className=\"far fa-trash-alt\"></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ) \r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                \r\n                <Modal show={this.state.showDeleteModal} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Product</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{\"You are about to delete Product with Part Number: \" + this.state.productToDelete.partNumber}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({showDeleteModal: false})}>Cancel</Button>\r\n                        <Button variant=\"primary\" onClick={() => this.deleteProduct(this.state.productToDelete)}>Delete</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductGrid;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Table, Form, ButtonGroup, Button, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { properties } from '../properties';\r\n\r\nclass ProductForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {       \r\n            proId: 0,\r\n            product: [],\r\n            proLblList: [],\r\n            proPartNo: '',\r\n            proName: '',\r\n            proDesc: '',\r\n            categoryId: 0,\r\n            beginning: '',\r\n            minimumRequired: '',\r\n            formErr: [],\r\n            errorMessage: \"\",\r\n            successMessage: \"\",\r\n            rootUrl: properties.rootUrl\r\n        };\r\n\r\n        this.populateCategoryListBox();\r\n\r\n    }\r\n\r\n    getProductRecord = (id) => {\r\n\r\n        axios.get(this.state.rootUrl + '/product/' + id).then(res => {\r\n            const product = res.data;\r\n            this.setState({ \r\n                proId : product.id,\r\n                proPartNo : product.partNumber,\r\n                proName : product.productName,\r\n                proDesc : product.productDesc,                \r\n                categoryId : product.categoryId,\r\n                minimumRequired : product.minimumRequired,\r\n                beginning : product.startingInventory\r\n                });\r\n        }).catch(function (error) {\r\n            alert(error);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({successMessage: \"\", errorMessage: \"\"});\r\n\r\n        this.setState({ [event.target.name] : event.target.value });\r\n        const regExpANH = /^[\\w\\-\\s]+$/i; // regular expression for alphanumeric and hypen\r\n        \r\n        const arrString = ['proPartNo','proName']; // for string field\r\n        const arrNumeric = ['categoryId','beginning']; // for numeric field\r\n        if(arrString.includes(event.target.name) && !regExpANH.test(event.target.value)) {\r\n            this.addItemErrArr(event.target.title);\r\n        }else if(arrNumeric.includes(event.target.name) && (parseInt(event.target.value,10) === 0 || event.target.value.trim().length === 0)){\r\n            this.addItemErrArr(event.target.title);   \r\n        }else if(event.target.name === \"proDesc\" && event.target.value.trim().length === 0){\r\n            this.addItemErrArr(event.target.title);\r\n        }else{\r\n            this.removeItemErrArr(event.target.title);    \r\n        }\r\n    }\r\n\r\n    addItemErrArr = (name) => {\r\n        if(!this.state.formErr.some(item => name === item)){\r\n            this.setState({ formErr: [...this.state.formErr, name] });\r\n        }\r\n    }\r\n\r\n    removeItemErrArr = (name) => {\r\n        var errList = [...this.state.formErr];\r\n        var errListindex = errList.indexOf(name);\r\n        if (errListindex !== -1) {\r\n            errList.splice(errListindex, 1);\r\n            this.setState({ formErr: errList });\r\n        }\r\n    }\r\n    \r\n    handleDelete = (event) => {\r\n        const delState = window.confirm(\"Do you really want to delete this product?\"); \r\n        if(delState){\r\n            axios.get( this.state.rootUrl + '/product/delete/'+event.target.id).then(function (response) {\r\n                alert('Product was successfully deleted');\r\n            }).catch(function (error) {\r\n                alert(error);\r\n            });\r\n        }\r\n        event.preventDefault();\r\n        this.componentDidMount();\r\n    }\r\n    \r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            action: 'Add',\r\n            proId: 0,\r\n            proPartNo: '',\r\n            proName: '',\r\n            proDesc: '',\r\n            categoryId: 0,\r\n            beginning: '',\r\n            minimumRequired: '',\r\n            errorMessage: \"\",\r\n            successMessage: \"\",\r\n            formErr: []\r\n        });    \r\n    }\r\n\r\n    addProduct = () => {        \r\n        var url = this.state.rootUrl + '/product/add/' + this.state.proPartNo+'/'+this.state.proName+'/'+this.state.proDesc+'/'+this.state.categoryId+'/'+this.state.minimumRequired+'/'+this.state.beginning;        \r\n\r\n\r\n        fetch(url, {method: \"POST\"})\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.resetForm();\r\n            this.setState({successMessage : \"Successfully added Product.\", errorMessage: \"\"});\r\n        })\r\n        .catch(error => {\r\n            this.setState({successMessage : \"\", errorMessage: error.message});            \r\n        }) \r\n\r\n        \r\n    }\r\n\r\n    editProduct = () => {\r\n        var url = this.state.rootUrl + '/product/edit/'+this.state.proId+'/'+this.state.proPartNo+'/'+this.state.proName+'/'+this.state.proDesc+'/'+this.state.categoryId+'/'+this.state.minimumRequired+'/'+this.state.beginning;\r\n\r\n        fetch(url, {method: \"POST\"})\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({successMessage : \"Successfully Updated Product.\", errorMessage: \"\"});\r\n        })\r\n        .catch(error => {\r\n            this.setState({successMessage : \"\", errorMessage: error.message});            \r\n        }) \r\n\r\n    }\r\n\r\n    populateCategoryListBox = () => {\r\n        axios.get(this.state.rootUrl + '/category/all/').then(res => {\r\n            const proLblList = res.data;\r\n            this.setState({ proLblList });\r\n        }).catch(function (error) {\r\n            alert(error);\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.productId !== prevProps.productId) {\r\n            this.populateCategoryListBox();\r\n            //Means Editting A Record\r\n            if (this.props.productId !== undefined && this.props.productId > 0) \r\n                this.getProductRecord(this.props.productId);            \r\n            else  //Means Adding a record\r\n                this.resetForm();\r\n        }    \r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={1}/>\r\n                        <Col xs={8}> \r\n                            <h2>{this.props.action === \"add\" ? \"Add Product\" : \"Edit Product\"}</h2>\r\n                        </Col>\r\n                        <Col xs={3} />\r\n                    </Row>\r\n                    \r\n                    <Row>   \r\n                        <Col xs={1}/>\r\n                        <Col xs={8}> \r\n                            <Form.Group controlId=\"fgPartNumber\">\r\n                                <Form.Label>Part Number</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"proPartNo\" title=\"Part Number\" value={this.state.proPartNo} onChange={this.handleChange} required />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"fgProductName\">\r\n                                <Form.Label>Product Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"proName\" title=\"Product Name\" value={this.state.proName} onChange={this.handleChange} required />\r\n                            </Form.Group>                        \r\n                            <Form.Group controlId=\"fgProductDesc\">\r\n                                <Form.Label>Product Description</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"proDesc\" title=\"Product Description\" value={this.state.proDesc} onChange={this.handleChange} required />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"fgProductLabel\">\r\n                                <Form.Label>Product Label</Form.Label>\r\n                                <Form.Control as=\"select\" name=\"categoryId\" title=\"Product Label\" value={this.state.categoryId} onChange={this.handleChange} required >\r\n                                    <option value=\"\" defaultValue>Choose...</option>\r\n                                    {\r\n                                        this.state.proLblList.map( (proLabel, i) =>\r\n                                            <option value={proLabel.id} key={i}>{proLabel.categoryName}</option>\r\n                                        )\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"fgMinRequired\">\r\n                                <Form.Label>Min Required</Form.Label>\r\n                                <Form.Control type=\"number\" name=\"minimumRequired\" title=\"Minimum Required\" value={this.state.minimumRequired} onChange={this.handleChange} required />\r\n                            </Form.Group>                            \r\n                            <Form.Group controlId=\"fgStartingInventory\">\r\n                                <Form.Label>Starting Inventory</Form.Label>\r\n                                <Form.Control type=\"number\" name=\"beginning\" title=\"Starting Inventory\" value={this.state.beginning} onChange={this.handleChange} required />\r\n                            </Form.Group>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <ButtonGroup size=\"md\">                                \r\n                                    <Button variant=\"success\" hidden={this.props.action === \"add\" ? false : true} onClick={() => this.addProduct()} >Save</Button>\r\n                                    <Button variant=\"primary\" hidden={this.props.action === \"edit\" ? false : true} onClick={() => this.editProduct()} >Save</Button>\r\n                                </ButtonGroup>            \r\n                            </div>\r\n\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Alert variant=\"danger\" hidden={this.state.errorMessage === \"\" ? true : false} >{this.state.errorMessage}</Alert>\r\n                            <Alert variant=\"success\" hidden={this.state.successMessage === \"\" ? true : false} >{this.state.successMessage}</Alert>\r\n                            <Alert variant=\"danger\" show={this.state.formErr.length > 0 ? true : false}>\r\n                                <label>Invalid Fields:</label>\r\n                                {\r\n                                    this.state.formErr.map( (errField, i) =>\r\n                                        <ul key={i}>\r\n                                            <li>{errField}</li>\r\n                                        </ul>\r\n                                    )\r\n                                }\r\n                            </Alert>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>         \r\n\r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProductForm\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Table, Form, ButtonGroup, Button, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ProductGrid from \"./ProductGrid\";\r\nimport ProductForm from './ProductForm';\r\n\r\nclass ProductScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productId: 0,\r\n            action: '',\r\n            tabKey: 'proList'            \r\n        };\r\n\r\n    }\r\n\r\n    setProductId = (prodId) => { \r\n        this.setState({ productId: prodId});         \r\n    }   \r\n\r\n    setTabKey = (keyForTab) => {\r\n        this.setState({ tabKey: keyForTab}); \r\n    }   \r\n\r\n    setAction = (updateAction) => {\r\n        this.setState({ action: updateAction}); \r\n    }   \r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Tabs activeKey={this.state.tabKey} onSelect={tabKey => this.setState({ tabKey, productId: 0, action: \"add\" })}  id=\"controlled-tab\">\r\n                    <Tab eventKey=\"proList\" title=\"Product Listing\" onEnter={ () => this.setProductId(undefined)}>\r\n                        <br/>\r\n                        <ProductGrid setTabKey={this.setTabKey} setProductId={this.setProductId} setAction={this.setAction} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"proEntry\" title=\"Product Entry\" >\r\n                        <br/>\r\n                        <ProductForm action={this.state.action} productId={this.state.productId}/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductScreen;\r\n","import React, { Component } from 'react';\r\nimport { Spinner, ButtonToolbar, Modal, Container, Row, Col, Table, Form, ButtonGroup, Button, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport { properties } from './../properties';\r\n\r\n\r\nclass CategoryGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            errorMessage: \"\",\r\n            infoMessage: \"\",\r\n            loading: true,\r\n            showDeleteModal: false,\r\n            categoryToDelete: \"\",\r\n            rootUrl: properties.rootUrl\r\n        };\r\n        this.loadGridData();  \r\n    }\r\n\r\n    loadGridData = () => {\r\n        \r\n        this.setState({errorMessage: \"\", loading: true});\r\n\r\n        fetch(this.state.rootUrl + '/category/all/')        \r\n        .then(response => response.json())\r\n        .then(data => this.setState({categories: data,errorMessage: \"\", loading: false, infoMessage: this.loadMessage()}))\r\n        .catch(error => this.setState({errorMessage : error.message, loading: false, infoMessage: \"\"}))\r\n\r\n\r\n        console.log(\"grid loaded.\")\r\n\r\n    }\r\n\r\n    loadMessage= () => {\r\n        var date = new Date();\r\n        var hours = date.getHours();\r\n        var days = date.getDay(); \r\n        var minutes = date.getMinutes();\r\n        var seconds = date.getSeconds();\r\n        var ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0'+minutes : minutes;\r\n        seconds = seconds < 10 ? '0'+seconds : seconds;\r\n\r\n        return  'Successfully refreshed data at ' + hours + ':' + minutes + ':' + seconds + ' ' + ampm;        \r\n    }\r\n\r\n\r\n    handleEdit = (id) => {\r\n        this.props.setTabKey(\"categoryForm\");\r\n        this.props.setCategoryId(id);\r\n        this.props.setAction(\"edit\");\r\n\r\n        console.log(id);\r\n    }\r\n\r\n    handleDelete = (category) => {\r\n        this.setState({showDeleteModal: true})\r\n        this.setState({categoryToDelete: category})\r\n    }\r\n\r\n    deleteCategory = (category) => {\r\n\r\n        fetch(this.state.rootUrl + '/category/delete/'+ category.id) \r\n       .catch(error => this.setState({errorMessage : error.message}))\r\n       \r\n       this.loadGridData();\r\n       this.setState({showDeleteModal: false})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonToolbar className=\"justify-content-between\" aria-label=\"Toolbar with Button groups\">                    \r\n                    <Spinner animation=\"border\" hidden={!this.state.loading} />\r\n                    <h7 style={{color:\"red\"}} hidden={!this.state.errorMessage}>{this.state.errorMessage}</h7>                    \r\n                    <h7 style={{color:\"green\"}}>{this.state.infoMessage}</h7>                    \r\n                    <Button size=\"sm\" variant=\"success\"  onClick={() => this.loadGridData()} >Refresh</Button>       \r\n                </ButtonToolbar>\r\n                <br/>\r\n                <Table striped bordered hover responsive size=\"sm\" >\r\n\r\n                    <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n                            <th>Category</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { \r\n                            this.state.categories.map( (category, i) =>\r\n                                <tr key={i}>\r\n                                    <td>{category.id}</td>\r\n                                    <td>{category.categoryName}</td>\r\n                                    <td>\r\n                                        <Button variant=\"primary\" size=\"sm\" onClick={() => this.handleEdit(category.id)} ><i id={category.id} className=\"fas fa-pen\"></i></Button> \r\n                                        <Button variant=\"danger\" size=\"sm\" onClick={() => this.handleDelete(category)} ><i id={category.id} className=\"far fa-trash-alt\"></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ) \r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                \r\n                <Modal show={this.state.showDeleteModal} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Category</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{\"You are about to delete Category: \" + this.state.categoryToDelete.partNumber}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({showDeleteModal: false})}>Cancel</Button>\r\n                        <Button variant=\"primary\" onClick={() => this.deleteCategory(this.state.categoryToDelete)}>Delete</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n            </div>\r\n            \r\n\r\n\r\n                    \r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryGrid;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Table, Form, ButtonGroup, Button, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { properties } from '../properties';\r\n\r\nclass CategoryForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {       \r\n            categoryId: 0,\r\n            categoryName: '',\r\n            categories: [],            \r\n            formErr: [],\r\n            errorMessage: \"\",\r\n            successMessage: \"\",\r\n            rootUrl: properties.rootUrl\r\n        };\r\n\r\n    }\r\n\r\n    getCategoryRecord = (id) => {\r\n\r\n        axios.get(this.state.rootUrl + '/category/' + id).then(res => {\r\n            const category = res.data;\r\n            this.setState({ \r\n                categoryId : category.id,\r\n                categoryName : category.categoryName\r\n                });\r\n        }).catch(function (error) {\r\n            alert(error);\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.categoryId !== prevProps.categoryId) {\r\n            //Means Editting A Record\r\n            if (this.props.categoryId !== undefined && this.props.categoryId > 0) \r\n                this.getCategoryRecord(this.props.categoryId);            \r\n            else  //Means Adding a record\r\n                this.resetForm();\r\n        }    \r\n        \r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({successMessage: \"\", errorMessage: \"\"});\r\n        this.setState({ [event.target.name] : event.target.value });\r\n        const regExpANH = /^[\\w\\-\\s]+$/i; // regular expression for alphanumeric and hypen\r\n        const arrString = ['categoryName']; // for string field\r\n        if(arrString.includes(event.target.name) && !regExpANH.test(event.target.value)) {\r\n            this.addItemErrArr(event.target.title);\r\n        }else{\r\n            this.removeItemErrArr(event.target.title);    \r\n        }\r\n    }\r\n\r\n    addItemErrArr = (name) => {\r\n        if(!this.state.formErr.some(item => name === item)){\r\n            this.setState({ formErr: [...this.state.formErr, name] });\r\n        }\r\n    }\r\n\r\n    removeItemErrArr = (name) => {\r\n        var errList = [...this.state.formErr];\r\n        var errListindex = errList.indexOf(name);\r\n        if (errListindex !== -1) {\r\n            errList.splice(errListindex, 1);\r\n            this.setState({ formErr: errList });\r\n        }\r\n    }\r\n    \r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            action: 'Add',\r\n            categoryId: 0,\r\n            categoryName: '',\r\n            errorMessage: '',\r\n            successMessage: '',\r\n            formErr: []\r\n        });    \r\n    }\r\n\r\n    addCategory = () => {        \r\n        var url = this.state.rootUrl + '/category/add/' + this.state.categoryName;\r\n\r\n\r\n        fetch(url, {method: \"POST\"})\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.resetForm();\r\n            this.setState({successMessage : \"Successfully added Product.\", errorMessage: \"\"});\r\n        })\r\n        .catch(error => {\r\n            this.setState({successMessage : \"\", errorMessage: error.message});            \r\n        }) \r\n\r\n        \r\n    }\r\n\r\n    editCategory = () => {\r\n        var url = this.state.rootUrl + '/category/edit/'+this.state.categoryId+'/'+this.state.categoryName;\r\n\r\n        fetch(url, {method: \"POST\"})\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({successMessage : \"Successfully Updated Category.\", errorMessage: \"\"});\r\n        })\r\n        .catch(error => {\r\n            this.setState({successMessage : \"\", errorMessage: error.message});            \r\n        }) \r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={1}/>\r\n                        <Col xs={8}> \r\n                            <h2>{this.props.action === \"add\" ? \"Add Category\" : \"Edit Category\"}</h2>\r\n                        </Col>\r\n                        <Col xs={3} />\r\n                    </Row>\r\n                    \r\n                    <Row>   \r\n                        <Col xs={1}/>\r\n                        <Col xs={8}> \r\n                            <Form.Group controlId=\"fgCategoryName\">\r\n                                <Form.Label>Category Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"categoryName\" title=\"Category Name\" value={this.state.categoryName} onChange={this.handleChange} required />\r\n                            </Form.Group>      \r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <ButtonGroup size=\"md\">                                \r\n                                    <Button variant=\"success\" hidden={this.props.action === \"add\" ? false : true} onClick={() => this.addCategory()} >Save</Button>\r\n                                    <Button variant=\"primary\" hidden={this.props.action === \"edit\" ? false : true} onClick={() => this.editCategory()} >Save</Button>\r\n                                </ButtonGroup>            \r\n                            </div>\r\n\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Alert variant=\"danger\" hidden={this.state.errorMessage === \"\" ? true : false} >{this.state.errorMessage}</Alert>\r\n                            <Alert variant=\"success\" hidden={this.state.successMessage === \"\" ? true : false} >{this.state.successMessage}</Alert>\r\n                            <Alert variant=\"danger\" show={this.state.formErr.length > 0 ? true : false}>\r\n                                <label>Invalid Fields:</label>\r\n                                {\r\n                                    this.state.formErr.map( (errField, i) =>\r\n                                        <ul key={i}>\r\n                                            <li>{errField}</li>\r\n                                        </ul>\r\n                                    )\r\n                                }\r\n                            </Alert>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>         \r\n\r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CategoryForm\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Table, Form, ButtonGroup, Button, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport CategoryGrid from \"./CategoryGrid\";\r\nimport CategoryForm from './CategoryForm';\r\n\r\nclass CategoryScreen extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categoryId: 0,\r\n            action: '',\r\n            tabKey: 'categoryList'            \r\n        };\r\n\r\n    }\r\n\r\n    setCategoryId = (catId) => { \r\n        this.setState({ categoryId: catId});         \r\n    }   \r\n\r\n    setTabKey = (keyForTab) => {\r\n        this.setState({ tabKey: keyForTab}); \r\n    }   \r\n\r\n    setAction = (updateAction) => {\r\n        this.setState({ action: updateAction}); \r\n    }   \r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Tabs activeKey={this.state.tabKey} onSelect={tabKey => this.setState({ tabKey, categoryId: 0, action: \"add\" })}  id=\"controlled-tab\">\r\n                    <Tab eventKey=\"categoryList\" title=\"Category Listing\" onEnter={ () => this.setCategoryId(undefined)}>\r\n                        <br/>\r\n                        <CategoryGrid setTabKey={this.setTabKey} setCategoryId={this.setCategoryId} setAction={this.setAction} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"categoryForm\" title=\"Category Entry\" >\r\n                        <br/>\r\n                        <CategoryForm action={this.state.action} categoryId={this.state.categoryId}/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CategoryScreen;\r\n","import React, { Component } from 'react';\r\nimport { Nav, Navbar, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport logo from './../logo.svg';\r\nimport ProductScreen from \"./Products/ProductScreen\"\r\nimport CategoryScreen from \"./Categories/CategoryScreen\"\r\n\r\nconst btnMargins = {\r\n  marginLeft: 10,\r\n  marginRight: 20,\r\n  marginBottom: 2\r\n}\r\n\r\nclass InventoryMainMenu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hideProducts:  true,\r\n            hidePurchases: true,\r\n            hideSales: true,            \r\n            hideCategories: true,\r\n            hideSuppliers: true,\r\n            hideReports: true\r\n        };\r\n\r\n    }\r\n\r\n    toggleForms = (formName) => {\r\n\r\n        //Reset All Forms to be hidden\r\n        this.setState({\r\n           hideProducts: (formName === \"Products\") ? false : true,\r\n           hidePurchases: (formName === \"Purchases\") ? false : true,\r\n           hideSales: (formName === \"Sales\") ? false : true,\r\n           hideCategories: (formName === \"Categories\") ? false : true,\r\n           hideSuppliers: (formName === \"Suppliers\") ? false : true, \r\n           hideReports: (formName === \"Reports\") ? false : true}) ;\r\n\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">\r\n                    <img alt=\"\" src={ logo } width=\"30\" height=\"30\" className=\"d-inline-block align-top\" />\r\n                    {'Hardware Inventory'}\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"buttons\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                        <Nav.Link onSelect={() => this.toggleForms(\"Products\")} href=\"#Products\">Products</Nav.Link>\r\n                        <Nav.Link onSelect={() => this.toggleForms(\"Categories\")} href=\"#Categories\">Categories</Nav.Link>\r\n                        <Nav.Link onSelect={() => this.toggleForms(\"Purchases\")} href=\"#Purchases\">Purchases</Nav.Link>\r\n                        \r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>                \r\n            <div hidden={this.state.hideProducts}>\r\n                <ProductScreen />\r\n            </div>\r\n            <div hidden={this.state.hideCategories}>\r\n                <CategoryScreen />\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default InventoryMainMenu;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport InventoryMainMenu from './Components/InventoryMainMenu';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<InventoryMainMenu />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}