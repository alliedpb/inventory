{"version":3,"sources":["Components/properties.js","Components/Products/ProductGrid.jsx","Components/Products/ProductEntry.jsx","Components/Products/ProductForm.jsx","Components/InventoryMainMenu.jsx","serviceWorker.js","index.js","logo.svg"],"names":["properties","rootUrl","rootUrl2","ProductGrid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadGridData","fetch","state","then","response","json","data","setState","products","errorMessage","catch","error","message","console","log","handleEdit","id","setTabKey","setProductId","setAction","handleDelete","product","showDeleteModal","productToDelete","deleteProduct","_this2","react_default","a","createElement","className","Row","Col","Alert","variant","hidden","Button","size","onClick","Table","striped","bordered","hover","responsive","map","i","key","productName","partNumber","productLabel","minimumRequired","startingInventory","inventoryReceived","inventorySold","inventoryOnHand","Modal","show","onHide","handleClose","Header","closeButton","Title","Body","Footer","Component","ProductEntry","getProductRecord","axios","get","res","proId","proPartNo","proName","proDesc","productDesc","categoryId","beginning","alert","handleChange","event","successMessage","defineProperty","target","name","value","includes","test","addItemErrArr","title","parseInt","trim","length","removeItemErrArr","formErr","some","item","concat","toConsumableArray","errList","errListindex","indexOf","splice","window","confirm","preventDefault","componentDidMount","resetForm","action","addProduct","url","method","editProduct","populateCategoryListBox","proLblList","prevProps","productId","undefined","Container","xs","Form","Group","controlId","Label","Control","type","onChange","required","as","defaultValue","proLabel","categoryName","ButtonGroup","errField","ProductForm","prodId","keyForTab","tabKey","updateAction","fluid","Tabs","activeKey","onSelect","Tab","eventKey","onEnter","Products_ProductGrid","Products_ProductEntry","InventoryMainMenu","toggleForms","formName","hideProducts","hidePurchases","hideSales","hideCategories","hideSuppliers","hideReports","Navbar","bg","expand","Brand","href","alt","src","logo","width","height","Toggle","aria-controls","Collapse","Nav","Link","Products_ProductForm","Boolean","location","hostname","match","ReactDOM","render","Components_InventoryMainMenu","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.43d9680b.chunk.js","sourcesContent":["export const properties = {\r\n    rootUrl: \"http://localhost:5000\",\r\n    rootUrl2: \"http://3.92.143.179:5000\"\r\n};","import React, { Component } from 'react';\r\nimport { Modal, Container, Row, Col, Table, Form, ButtonGroup, Button, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport { properties } from './../properties';\r\n\r\n\r\nclass ProductGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            errorMessage: \"\",\r\n            showDeleteModal: false,\r\n            productToDelete: \"\",\r\n            rootUrl: properties.rootUrl\r\n        };\r\n        this.loadGridData();  \r\n    }\r\n\r\n    loadGridData = () => {\r\n\r\n        fetch(this.state.rootUrl + '/product/all/')        \r\n        .then(response => response.json())\r\n        .then(data => this.setState({products: data,errorMessage: \"\"}))\r\n        .catch(error => this.setState({errorMessage : error.message}))\r\n\r\n        console.log(\"grid loaded.\")\r\n\r\n    }\r\n\r\n    handleEdit = (id) => {\r\n        this.props.setTabKey(\"proEntry\");\r\n        this.props.setProductId(id);\r\n        this.props.setAction(\"edit\");\r\n    }\r\n\r\n    handleDelete = (product) => {\r\n        this.setState({showDeleteModal: true})\r\n        this.setState({productToDelete: product})\r\n    }\r\n\r\n    deleteProduct = (product) => {\r\n\r\n        fetch(this.state.rootUrl + '/product/delete/'+ product.id) \r\n       .catch(error => this.setState({errorMessage : error.message}))\r\n       \r\n       this.loadGridData();\r\n       this.setState({showDeleteModal: false})\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex justify-content-left\">\r\n                    <Row>\r\n                        <Col> \r\n                            <Alert variant=\"danger\" hidden={this.state.errorMessage === \"\" ? true : false} >{this.state.errorMessage}</Alert>\r\n                        </Col>\r\n                        <Col> \r\n                            <Button size=\"sm\" variant=\"success\"  onClick={() => this.loadGridData()} >Refresh</Button> \r\n                        </Col>                        \r\n                    </Row>\r\n                </div>\r\n                <br/>\r\n                <Table striped bordered hover responsive size=\"sm\" >\r\n\r\n                    <thead>\r\n                        <tr>\r\n                            <th>id</th>\r\n                            <th>Name</th>\r\n                            <th>Part #</th>\r\n                            <th>Category</th>\r\n                            <th>Min Required</th>\r\n                            <th>Starting</th>\r\n                            <th>Purchased</th>\r\n                            <th>Sold</th>\r\n                            <th>OnHand</th>                        \r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { \r\n                            this.state.products.map( (product, i) =>\r\n                                <tr key={i}>\r\n                                    <td>{product.id}</td>\r\n                                    <td>{product.productName}</td>\r\n                                    <td>{product.partNumber}</td>\r\n                                    <td>{product.productLabel}</td>\r\n                                    <td>{product.minimumRequired}</td>\r\n                                    <td>{product.startingInventory}</td>\r\n                                    <td>{product.inventoryReceived}</td>\r\n                                    <td>{product.inventorySold}</td>\r\n                                    <td>{product.inventoryOnHand}</td>                                \r\n                                    <td>\r\n                                        <Button variant=\"primary\" size=\"sm\" onClick={() => this.handleEdit(product.id)} ><i id={product.id} className=\"fas fa-pen\"></i></Button> \r\n                                        <Button variant=\"danger\" size=\"sm\" onClick={() => this.handleDelete(product)} ><i id={product.id} className=\"far fa-trash-alt\"></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ) \r\n                        }\r\n                    </tbody>\r\n                </Table>\r\n                \r\n                <Modal show={this.state.showDeleteModal} onHide={this.handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Product</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{\"You are about to delete Product with Part Number: \" + this.state.productToDelete.partNumber}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({showDeleteModal: false})}>Cancel</Button>\r\n                        <Button variant=\"primary\" onClick={() => this.deleteProduct(this.state.productToDelete)}>Delete</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n            </div>\r\n            \r\n\r\n\r\n                    \r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductGrid;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Table, Form, ButtonGroup, Button, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { properties } from './../properties';\r\n\r\nclass ProductEntry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {       \r\n            proId: 0,\r\n            product: [],\r\n            proLblList: [],\r\n            proPartNo: '',\r\n            proName: '',\r\n            proDesc: '',\r\n            categoryId: 0,\r\n            beginning: '',\r\n            minimumRequired: '',\r\n            formErr: [],\r\n            errorMessage: \"\",\r\n            successMessage: \"\",\r\n            rootUrl: properties.rootUrl\r\n        };\r\n\r\n        this.populateCategoryListBox();\r\n\r\n    }\r\n\r\n    getProductRecord = (id) => {\r\n\r\n        axios.get(this.state.rootUrl + '/product/' + id).then(res => {\r\n            const product = res.data;\r\n            this.setState({ \r\n                proId : product.id,\r\n                proPartNo : product.partNumber,\r\n                proName : product.productName,\r\n                proDesc : product.productDesc,                \r\n                categoryId : product.categoryId,\r\n                minimumRequired : product.minimumRequired,\r\n                beginning : product.startingInventory\r\n                });\r\n        }).catch(function (error) {\r\n            alert(error);\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({successMessage: \"\", errorMessage: \"\"});\r\n\r\n        this.setState({ [event.target.name] : event.target.value });\r\n        const regExpANH = /^[-a-zA-Z0-9]+$/; // regular expression for alphanumeric and hypen\r\n        const arrString = ['proPartNo','proName']; // for string field\r\n        const arrNumeric = ['categoryId','beginning']; // for numeric field\r\n        if(arrString.includes(event.target.name) && !regExpANH.test(event.target.value)) {\r\n            this.addItemErrArr(event.target.title);\r\n        }else if(arrNumeric.includes(event.target.name) && (parseInt(event.target.value,10) === 0 || event.target.value.trim().length === 0)){\r\n            this.addItemErrArr(event.target.title);   \r\n        }else if(event.target.name === \"proDesc\" && event.target.value.trim().length === 0){\r\n            this.addItemErrArr(event.target.title);\r\n        }else{\r\n            this.removeItemErrArr(event.target.title);    \r\n        }\r\n    }\r\n\r\n    addItemErrArr = (name) => {\r\n        if(!this.state.formErr.some(item => name === item)){\r\n            this.setState({ formErr: [...this.state.formErr, name] });\r\n        }\r\n    }\r\n\r\n    removeItemErrArr = (name) => {\r\n        var errList = [...this.state.formErr];\r\n        var errListindex = errList.indexOf(name);\r\n        if (errListindex !== -1) {\r\n            errList.splice(errListindex, 1);\r\n            this.setState({ formErr: errList });\r\n        }\r\n    }\r\n    \r\n    handleDelete = (event) => {\r\n        const delState = window.confirm(\"Do you really want to delete this product?\"); \r\n        if(delState){\r\n            axios.get( this.state.rootUrl + '/product/delete/'+event.target.id).then(function (response) {\r\n                alert('Product was successfully deleted');\r\n            }).catch(function (error) {\r\n                alert(error);\r\n            });\r\n        }\r\n        event.preventDefault();\r\n        this.componentDidMount();\r\n    }\r\n    \r\n\r\n    resetForm = () => {\r\n        this.setState({\r\n            action: 'Add',\r\n            proId: 0,\r\n            proPartNo: '',\r\n            proName: '',\r\n            proDesc: '',\r\n            categoryId: 0,\r\n            beginning: '',\r\n            minimumRequired: '',\r\n            errorMessage: \"\",\r\n            successMessage: \"\",\r\n            formErr: []\r\n        });    \r\n    }\r\n\r\n    addProduct = () => {        \r\n        var url = this.state.rootUrl + '/product/add/' + this.state.proPartNo+'/'+this.state.proName+'/'+this.state.proDesc+'/'+this.state.categoryId+'/'+this.state.minimumRequired+'/'+this.state.beginning;        \r\n\r\n\r\n        fetch(url, {method: \"POST\"})\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.resetForm();\r\n            this.setState({successMessage : \"Successfully added Product.\", errorMessage: \"\"});\r\n        })\r\n        .catch(error => {\r\n            this.setState({successMessage : \"\", errorMessage: error.message});            \r\n        }) \r\n\r\n        \r\n    }\r\n\r\n    editProduct = () => {\r\n        var url = this.state.rootUrl + '/product/edit/'+this.state.proId+'/'+this.state.proPartNo+'/'+this.state.proName+'/'+this.state.proDesc+'/'+this.state.categoryId+'/'+this.state.minimumRequired+'/'+this.state.beginning;\r\n\r\n        fetch(url, {method: \"POST\"})\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({successMessage : \"Successfully Updated Product.\", errorMessage: \"\"});\r\n        })\r\n        .catch(error => {\r\n            this.setState({successMessage : \"\", errorMessage: error.message});            \r\n        }) \r\n\r\n    }\r\n\r\n    populateCategoryListBox = () => {\r\n        axios.get(this.state.rootUrl + '/category/all/').then(res => {\r\n            const proLblList = res.data;\r\n            this.setState({ proLblList });\r\n        }).catch(function (error) {\r\n            alert(error);\r\n        });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.productId !== prevProps.productId) {\r\n            this.populateCategoryListBox();\r\n            //Means Editting A Record\r\n            if (this.props.productId !== undefined && this.props.productId > 0) \r\n                this.getProductRecord(this.props.productId);            \r\n            else  //Means Adding a record\r\n                this.resetForm();\r\n        }    \r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={1}/>\r\n                        <Col xs={8}> \r\n                            <h2>{this.props.action === \"add\" ? \"Add Product\" : \"Edit Product\"}</h2>\r\n                        </Col>\r\n                        <Col xs={3} />\r\n                    </Row>\r\n                    \r\n                    <Row>   \r\n                        <Col xs={1}/>\r\n                        <Col xs={8}> \r\n                            <Form.Group controlId=\"fgPartNumber\">\r\n                                <Form.Label>Part Number</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"proPartNo\" title=\"Part Number\" value={this.state.proPartNo} onChange={this.handleChange} required />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"fgProductName\">\r\n                                <Form.Label>Product Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"proName\" title=\"Product Name\" value={this.state.proName} onChange={this.handleChange} required />\r\n                            </Form.Group>                        \r\n                            <Form.Group controlId=\"fgProductDesc\">\r\n                                <Form.Label>Product Description</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"proDesc\" title=\"Product Description\" value={this.state.proDesc} onChange={this.handleChange} required />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"fgProductLabel\">\r\n                                <Form.Label>Product Label</Form.Label>\r\n                                <Form.Control as=\"select\" name=\"categoryId\" title=\"Product Label\" value={this.state.categoryId} onChange={this.handleChange} required >\r\n                                    <option value=\"\" defaultValue>Choose...</option>\r\n                                    {\r\n                                        this.state.proLblList.map( (proLabel, i) =>\r\n                                            <option value={proLabel.id} key={i}>{proLabel.categoryName}</option>\r\n                                        )\r\n                                    }\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"fgMinRequired\">\r\n                                <Form.Label>Min Required</Form.Label>\r\n                                <Form.Control type=\"number\" name=\"minimumRequired\" title=\"Minimum Required\" value={this.state.minimumRequired} onChange={this.handleChange} required />\r\n                            </Form.Group>                            \r\n                            <Form.Group controlId=\"fgStartingInventory\">\r\n                                <Form.Label>Starting Inventory</Form.Label>\r\n                                <Form.Control type=\"number\" name=\"beginning\" title=\"Starting Inventory\" value={this.state.beginning} onChange={this.handleChange} required />\r\n                            </Form.Group>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <ButtonGroup size=\"md\">                                \r\n                                    <Button variant=\"success\" hidden={this.props.action === \"add\" ? false : true} onClick={() => this.addProduct()} >Save</Button>\r\n                                    <Button variant=\"primary\" hidden={this.props.action === \"edit\" ? false : true} onClick={() => this.editProduct()} >Save</Button>\r\n                                </ButtonGroup>            \r\n                            </div>\r\n\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <Alert variant=\"danger\" hidden={this.state.errorMessage === \"\" ? true : false} >{this.state.errorMessage}</Alert>\r\n                            <Alert variant=\"success\" hidden={this.state.successMessage === \"\" ? true : false} >{this.state.successMessage}</Alert>\r\n                            <Alert variant=\"danger\" show={this.state.formErr.length > 0 ? true : false}>\r\n                                <label>Invalid Fields:</label>\r\n                                {\r\n                                    this.state.formErr.map( (errField, i) =>\r\n                                        <ul key={i}>\r\n                                            <li>{errField}</li>\r\n                                        </ul>\r\n                                    )\r\n                                }\r\n                            </Alert>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>         \r\n\r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ProductEntry\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Table, Form, ButtonGroup, Button, Tabs, Tab, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ProductGrid from \"./ProductGrid\";\r\nimport ProductEntry from './ProductEntry';\r\n\r\nclass ProductForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productId: 0,\r\n            action: '',\r\n            tabKey: 'proList'            \r\n        };\r\n\r\n    }\r\n\r\n    setProductId = (prodId) => {\r\n        this.setState({ productId: prodId}); \r\n    }   \r\n\r\n    setTabKey = (keyForTab) => {\r\n        this.setState({ tabKey: keyForTab}); \r\n    }   \r\n\r\n    setAction = (updateAction) => {\r\n        this.setState({ action: updateAction}); \r\n    }   \r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Tabs activeKey={this.state.tabKey} onSelect={tabKey => this.setState({ tabKey, productId: 0, action: \"add\" })}  id=\"controlled-tab\">\r\n                    <Tab eventKey=\"proList\" title=\"Product Listing\" onEnter={ () => this.setProductId(undefined)}>\r\n                        <br/>\r\n                        <ProductGrid setTabKey={this.setTabKey} setProductId={this.setProductId} setAction={this.setAction} />\r\n                    </Tab>\r\n                    <Tab eventKey=\"proEntry\" title=\"Product Entry\" >\r\n                        <br/>\r\n                        <ProductEntry action={this.state.action} productId={this.state.productId}/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductForm;\r\n","import React, { Component } from 'react';\r\nimport { Nav, Navbar, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport logo from './../logo.svg';\r\nimport ProductForm from \"./Products/ProductForm\"\r\n\r\nconst btnMargins = {\r\n  marginLeft: 10,\r\n  marginRight: 20,\r\n  marginBottom: 2\r\n}\r\n\r\nclass InventoryMainMenu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hideProducts:  true,\r\n            hidePurchases: true,\r\n            hideSales: true,            \r\n            hideCategories: true,\r\n            hideSuppliers: true,\r\n            hideReports: true\r\n        };\r\n\r\n    }\r\n\r\n    toggleForms = (formName) => {\r\n\r\n        //Reset All Forms to be hidden\r\n        this.setState({\r\n           hideProducts: (formName === \"Products\") ? false : true,\r\n           hidePurchases: (formName === \"Purchases\") ? false : true,\r\n           hideSales: (formName === \"Sales\") ? false : true,\r\n           hideCategories: (formName === \"Categories\") ? false : true,\r\n           hideSuppliers: (formName === \"Suppliers\") ? false : true, \r\n           hideReports: (formName === \"Reports\") ? false : true}) ;\r\n\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n                <Navbar.Brand href=\"#home\">\r\n                    <img alt=\"\" src={ logo } width=\"30\" height=\"30\" className=\"d-inline-block align-top\" />\r\n                    {'Hardware Inventory'}\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"buttons\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                        <Nav.Link onSelect={() => this.toggleForms(\"Products\")} href=\"#Products\">Products</Nav.Link>\r\n                        <Nav.Link onSelect={() => this.toggleForms(\"Purchases\")} href=\"#Purchases\">Purchases</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>                \r\n            <div hidden={this.state.hideProducts}>\r\n                <ProductForm />\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default InventoryMainMenu;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport InventoryMainMenu from './Components/InventoryMainMenu';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<InventoryMainMenu />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}